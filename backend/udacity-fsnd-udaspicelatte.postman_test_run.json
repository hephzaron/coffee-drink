{
	"id": "30333e62-cb3e-4f40-b6b4-1eb512e78e5d",
	"name": "udacity-fsnd-udaspicelatte",
	"allTests": [],
	"timestamp": "2022-07-13T16:28:02.168Z",
	"collection_id": "d5bb41ee-e726-c2aa-7714-7d3edd507c7f",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "43a0e9c1-21d7-857d-e31f-a93e5c272318",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "d5bb41ee-e726-c2aa-7714-7d3edd507c7f",
		"name": "udacity-fsnd-udaspicelatte",
		"description": "",
		"order": [],
		"folders": [
			{
				"collection": "d5bb41ee-e726-c2aa-7714-7d3edd507c7f",
				"collectionId": "d5bb41ee-e726-c2aa-7714-7d3edd507c7f",
				"collection_id": "d5bb41ee-e726-c2aa-7714-7d3edd507c7f",
				"description": "",
				"folders_order": [],
				"id": "93741396-0ad4-0e69-8d00-3107dae2b73c",
				"name": "barista",
				"order": [
					"d799734c-aaf0-934e-e190-c99b93fb2ad0",
					"445e7c9f-b14c-019b-cda5-8c3c06457a69",
					"be5dd9b1-ffd7-5ee9-fb16-d73d9db0c699",
					"e1321d4f-a183-276c-3c98-19116bed93df",
					"9fbdc6c6-2808-e03a-2366-1c0a64ff49d6"
				],
				"owner": 0
			},
			{
				"collection": "d5bb41ee-e726-c2aa-7714-7d3edd507c7f",
				"collectionId": "d5bb41ee-e726-c2aa-7714-7d3edd507c7f",
				"collection_id": "d5bb41ee-e726-c2aa-7714-7d3edd507c7f",
				"description": "",
				"folders_order": [],
				"id": "3bebebb9-9702-2424-5dfc-b54330914246",
				"name": "manager",
				"order": [
					"e92b7107-c1d1-965a-a702-d76f98750e01",
					"c4fc102a-2ef7-fbb7-e2b2-64b0687a5ba1",
					"8e9e77be-a5ee-14b8-f19b-36dd24a73a05",
					"4e216a7a-db51-dbef-45ed-2962ce89b637",
					"674310c8-8d19-ea73-928b-8ab9a9842079"
				],
				"owner": 0
			},
			{
				"collection": "d5bb41ee-e726-c2aa-7714-7d3edd507c7f",
				"collectionId": "d5bb41ee-e726-c2aa-7714-7d3edd507c7f",
				"collection_id": "d5bb41ee-e726-c2aa-7714-7d3edd507c7f",
				"description": "",
				"folders_order": [],
				"id": "fdf39d97-71bb-058c-1759-0a6ebe35854f",
				"name": "public",
				"order": [
					"437a3b42-c1d9-4cb5-5c95-da253f8b0201",
					"6ba939ad-b42c-dd02-8bc2-c66328c860b9",
					"21dafefe-aec2-7e76-2464-45b9776c85d8",
					"f5bd82f7-f7f9-721d-08b8-c6e2995ce32a",
					"cc228b5b-48b0-0b68-5b8a-a393a6c0a48d"
				],
				"owner": 0
			}
		],
		"folders_order": [
			"fdf39d97-71bb-058c-1759-0a6ebe35854f",
			"93741396-0ad4-0e69-8d00-3107dae2b73c",
			"3bebebb9-9702-2424-5dfc-b54330914246"
		],
		"timestamp": 0,
		"synced": true,
		"remote_id": 0,
		"owner": 0,
		"sharedWithTeam": false,
		"subscribed": false,
		"remoteLink": "",
		"remoteLinkUpdatedAt": null,
		"public": false,
		"createdAt": 1657661292297,
		"updatedAt": 1657728836375,
		"write": true,
		"published": false,
		"favorite": true,
		"permissions": {},
		"syncedPermissions": {}
	},
	"folder": null,
	"environment": null,
	"globals": [],
	"results": [
		{
			"name": "/drinks",
			"id": "437a3b42-c1d9-4cb5-5c95-da253f8b0201",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"615"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "615",
			"totalRequestTime": "615",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "6ba939ad-b42c-dd02-8bc2-c66328c860b9",
			"url": "http://localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401 since no credentials are present": true
			},
			"testPassFailCounts": {
				"Status code is 401 since no credentials are present": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"510"
			],
			"allTests": [
				{
					"Status code is 401 since no credentials are present": true
				}
			],
			"time": "510",
			"totalRequestTime": "510",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "21dafefe-aec2-7e76-2464-45b9776c85d8",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401 since no credentials are present": true
			},
			"testPassFailCounts": {
				"Status code is 401 since no credentials are present": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"514"
			],
			"allTests": [
				{
					"Status code is 401 since no credentials are present": true
				}
			],
			"time": "514",
			"totalRequestTime": "514",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "f5bd82f7-f7f9-721d-08b8-c6e2995ce32a",
			"url": "http://localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401 since no credentials are present": true
			},
			"testPassFailCounts": {
				"Status code is 401 since no credentials are present": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"511"
			],
			"allTests": [
				{
					"Status code is 401 since no credentials are present": true
				}
			],
			"time": "511",
			"totalRequestTime": "511",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "cc228b5b-48b0-0b68-5b8a-a393a6c0a48d",
			"url": "http://localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401 since no credentials are present": true
			},
			"testPassFailCounts": {
				"Status code is 401 since no credentials are present": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"519"
			],
			"allTests": [
				{
					"Status code is 401 since no credentials are present": true
				}
			],
			"time": "519",
			"totalRequestTime": "519",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "d799734c-aaf0-934e-e190-c99b93fb2ad0",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"513"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "513",
			"totalRequestTime": "513",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "445e7c9f-b14c-019b-cda5-8c3c06457a69",
			"url": "http://localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"1344"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "1344",
			"totalRequestTime": "1344",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "be5dd9b1-ffd7-5ee9-fb16-d73d9db0c699",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "FORBIDDEN",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"Status code is 403 since credentials are valid, but permission is not present": true
			},
			"testPassFailCounts": {
				"Status code is 403 since credentials are valid, but permission is not present": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"705"
			],
			"allTests": [
				{
					"Status code is 403 since credentials are valid, but permission is not present": true
				}
			],
			"time": "705",
			"totalRequestTime": "705",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "e1321d4f-a183-276c-3c98-19116bed93df",
			"url": "http://localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "FORBIDDEN",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"Status code is 403 since credentials are valid, but permission is not present": true
			},
			"testPassFailCounts": {
				"Status code is 403 since credentials are valid, but permission is not present": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"919"
			],
			"allTests": [
				{
					"Status code is 403 since credentials are valid, but permission is not present": true
				}
			],
			"time": "919",
			"totalRequestTime": "919",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "9fbdc6c6-2808-e03a-2366-1c0a64ff49d6",
			"url": "http://localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "FORBIDDEN",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"Status code is 403 since credentials are valid, but permission is not present": true
			},
			"testPassFailCounts": {
				"Status code is 403 since credentials are valid, but permission is not present": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"763"
			],
			"allTests": [
				{
					"Status code is 403 since credentials are valid, but permission is not present": true
				}
			],
			"time": "763",
			"totalRequestTime": "763",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "e92b7107-c1d1-965a-a702-d76f98750e01",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"515"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "515",
			"totalRequestTime": "515",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "c4fc102a-2ef7-fbb7-e2b2-64b0687a5ba1",
			"url": "http://localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"787"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "787",
			"totalRequestTime": "787",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "8e9e77be-a5ee-14b8-f19b-36dd24a73a05",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"872"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "872",
			"totalRequestTime": "872",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "4e216a7a-db51-dbef-45ed-2962ce89b637",
			"url": "http://localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"1245"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "1245",
			"totalRequestTime": "1245",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "674310c8-8d19-ea73-928b-8ab9a9842079",
			"url": "http://localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"831"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "831",
			"totalRequestTime": "831",
			"iterationResults": {}
		}
	],
	"totalPass": 20,
	"totalFail": 0,
	"totalTime": 11163,
	"lifecycle": "done",
	"requests": [
		{
			"name": "/drinks",
			"id": "437a3b42-c1d9-4cb5-5c95-da253f8b0201",
			"url": "http://localhost:5000/drinks",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "6ba939ad-b42c-dd02-8bc2-c66328c860b9",
			"url": "http://localhost:5000/drinks-detail",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401 since no credentials are present": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "21dafefe-aec2-7e76-2464-45b9776c85d8",
			"url": "http://localhost:5000/drinks",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401 since no credentials are present": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "f5bd82f7-f7f9-721d-08b8-c6e2995ce32a",
			"url": "http://localhost:5000/drinks/1",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401 since no credentials are present": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "cc228b5b-48b0-0b68-5b8a-a393a6c0a48d",
			"url": "http://localhost:5000/drinks/1",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401 since no credentials are present": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "d799734c-aaf0-934e-e190-c99b93fb2ad0",
			"url": "http://localhost:5000/drinks",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "445e7c9f-b14c-019b-cda5-8c3c06457a69",
			"url": "http://localhost:5000/drinks-detail",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "be5dd9b1-ffd7-5ee9-fb16-d73d9db0c699",
			"url": "http://localhost:5000/drinks",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 403,
				"name": "FORBIDDEN",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status code is 403 since credentials are valid, but permission is not present": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "e1321d4f-a183-276c-3c98-19116bed93df",
			"url": "http://localhost:5000/drinks/1",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 403,
				"name": "FORBIDDEN",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status code is 403 since credentials are valid, but permission is not present": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "9fbdc6c6-2808-e03a-2366-1c0a64ff49d6",
			"url": "http://localhost:5000/drinks/1",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 403,
				"name": "FORBIDDEN",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status code is 403 since credentials are valid, but permission is not present": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "e92b7107-c1d1-965a-a702-d76f98750e01",
			"url": "http://localhost:5000/drinks",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "c4fc102a-2ef7-fbb7-e2b2-64b0687a5ba1",
			"url": "http://localhost:5000/drinks-detail",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "8e9e77be-a5ee-14b8-f19b-36dd24a73a05",
			"url": "http://localhost:5000/drinks",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "4e216a7a-db51-dbef-45ed-2962ce89b637",
			"url": "http://localhost:5000/drinks/1",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "674310c8-8d19-ea73-928b-8ab9a9842079",
			"url": "http://localhost:5000/drinks/1",
			"time": "2022-07-13T16:28:02.168Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}